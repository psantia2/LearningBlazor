@page "/AssignedTasks"
@rendermode InteractiveServer

<PageTitle>AssignedTasks</PageTitle>

<h1>Assigned Tasks</h1>

<p role="status">Current count: @currentCount</p>

<button class="btn btn-primary" @onclick="IncrementCount">Add</button>
<button class="btn btn-primary" @onclick="SubCount">Sub</button>

<EditForm Model="@enteredValue" OnValidSubmit="countup">
    <label for="Number">Number: </label>
    <InputNumber id="Number" @bind-Value="@enteredValue.entered_num"/>
</EditForm>

<SpinningButtonTemplate changeColor="@colorTo" onButtonClick="loopthrough" state="loopingNumbers"/>

<p role="status">@startingNum</p>

<button class="btn btn-primary" @onclick="callJS">CALL JS</button>

<div class="form-floating">
    <textarea class="form-control" placeholder="Leave a comment here" id="floatingTextarea" @bind="copyToShowAlert"></textarea>
    <label for="floatingTextarea">Comments</label>
</div>

<button class=" btn btn-primary" @onclick="OpenDialogue">Open Modal</button>


    <div class="modal" id="myModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Modal title</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" @onclick="CloseDialogue"></button>
                </div>
                <div class="modal-body">
                    <p>Completed</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" @onclick="CloseDialogue">Close</button>
                    <button type="button" class="btn btn-primary">Save changes</button>
                </div>
            </div>
        </div>
    </div>


@code {
    GetNum enteredValue = new();

    private int currentCount = 0;
    private int countingUp = 0;
    private int startingNum = 0;
    private bool loopingNumbers = false;
    private string copyToShowAlert = string.Empty;
    private string colorTo = "btn btn-primary";


    private void IncrementCount()
    {
        currentCount++;
    }
    private void SubCount()
    {
        currentCount--;
    }

    private void countup()
    {
        countingUp = enteredValue.entered_num;
    }

    private async Task loopthrough()
    {
        colorTo = "btn btn-danger";
        loopingNumbers = true;
        startingNum = 0;
        for (int x = countingUp; x > 0; x--)
        {
            startingNum++;
            await Task.Delay(1000);
            StateHasChanged();
        }

        await OpenDialogue();

        loopingNumbers = false;
        colorTo = "btn btn-success";
        await Task.Delay(2000);
    }

    private async Task callJS()
    {
        await JSRunTime.InvokeVoidAsync("showAlert",copyToShowAlert);
    }

    private async Task OpenDialogue()
    {

        await JSRunTime.InvokeVoidAsync("showModal", "myModal");
    }

    private async Task CloseDialogue()
    {
        await JSRunTime.InvokeVoidAsync("hideModal", "myModal");
    }

}
